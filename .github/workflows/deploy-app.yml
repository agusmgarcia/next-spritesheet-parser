name: Deploy application
permissions: write-all

on:
  workflow_dispatch:
  push:
    tags:
      - v*

jobs:
  deploy-app:
    name: Deploy application
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref_name }}
      cancel-in-progress: true

    steps:
      - name: Check if the type is 'tag'
        if: ${{ github.event_name == 'workflow_dispatch' && github.ref_type != 'tag' }}
        run: |
          echo "::error::Workflow needs to be dispatched from a tag"
          exit 1
        shell: bash

      - name: Get version from tag
        id: get-version-from-tag
        uses: frabert/replace-string-action@v2
        with:
          pattern: v(.*)
          replace-with: $1
          string: ${{ github.ref_name }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          cache: npm
          node-version: 20

      - name: Install dependencies
        run: npm ci --ignore-scripts
        shell: bash
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check
        run: npm run check
        shell: bash

      - name: Test
        run: npm test
        shell: bash

      - name: Build
        run: npm run build
        shell: bash
        env:
          BASE_PATH: /${{ github.event.repository.name }}
          NEXT_PUBLIC_APP_VERSION: ${{ steps.get-version-from-tag.outputs.replaced }}

      - name: Configure pages
        uses: actions/configure-pages@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: out
          retention-days: 1

      - name: Create release
        id: create-release
        if: ${{ github.event_name != 'workflow_dispatch' }}
        uses: ncipollo/release-action@v1
        with:
          name: Version ${{ steps.get-version-from-tag.outputs.replaced }}
          tag: ${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

      - name: Delete release and tag on error
        if: ${{ (failure() || cancelled()) && steps.create-release.conclusion == 'success' }}
        run: gh release delete ${{ github.ref_name }} --cleanup-tag
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
